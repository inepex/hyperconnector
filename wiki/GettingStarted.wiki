=Check out necessary projects=

=Create an entity=
Like in JPA, an entity is a Java POJO annotated with the specific annotations.<br/>
The example is based on a ticketing system and we will store Tickets. A ticket is built up from:<br/>
<ul>
<li> Title: the title of the ticket (ie.: Server update) </li>
<li> Description: description of the ticket (ie.: New kernel is available, you shoud update to the new one.) </li>
<li> Priority: the priority of the ticket (ie.: 5) </li>
<li> Problem type: the type of the ticket (ie.: Update) </li>
<li> Is Fixed: is the task has done (ie.: Unfixed) </li>
</ul> <br/>
Here is a example HyperConnector entity: <br/>

{{{
@HyperEntity(namespace="UserSupport", table="Ticket", rowKeySerializationType = SerializationTypes.PLAIN, globalValueSerializationType = SerializationTypes.PLAIN, globalColumnQualifierSerializationType=SerializationTypes.PLAIN)
public class Ticket {
	@RowKeyField(order=0, sortOrder=SortOrders.ASCENDING)
	private String server;
	
	@Timestamp(assignmentType=TimestampAssignmentTypes.MANUAL)
	private long timestamp;
	
	@ValueField(columnFamily="title")
	private String title;
	@ValueField(columnFamily="description")
	private String description;
	@ValueField(columnFamily="priority")
	private String priority;
	@ValueField(columnFamily="problemtype")
	private String problemType;
	@ValueField(columnFamily="isFixed")
	private boolean isFixed;
	
	
	public String getServer() {
		return server;
	}
	public void setServer(String server) {
		this.server = server;
	}
	public long getTimestamp() {
		return timestamp;
	}
	public void setTimestamp(long timestamp) {
		this.timestamp = timestamp;
	}
	public String getTitle() {
		return title;
	}
	public void setTitle(String title) {
		this.title = title;
	}
	public String getDescription() {
		return description;
	}
	public void setDescription(String description) {
		this.description = description;
	}
	public String getPriority() {
		return priority;
	}
	public void setPriority(String priority) {
		this.priority = priority;
	}
	public String getProblemType() {
		return problemType;
	}
	public void setProblemType(String problemType) {
		this.problemType = problemType;
	}
	public boolean getIsFixed() {
		return isFixed;
	}
	public void setIsFixed(boolean isFixed) {
		this.isFixed = isFixed;
	}
	
}
}}}